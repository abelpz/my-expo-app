name: Build Android Release

on:
  # Trigger manually
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type (optional)'
        required: false
        default: 'none'
        type: choice
        options:
        - patch
        - minor
        - major
        - none
      create_release:
        description: 'Create GitHub release after build'
        required: false
        default: false
        type: boolean
  
  # Trigger automatically on tag push (v*.*.*)
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🏗 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔧 Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 🔢 Update version (optional)
      if: ${{ github.event.inputs.version_bump != 'none' && github.event.inputs.version_bump != '' }}
      run: |
        if [ "${{ github.event.inputs.version_bump }}" != "none" ]; then
          echo "Updating Open Bible Stories version..."
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          
          # Update version in app.json to match package.json
          VERSION=$(node -p "require('./package.json').version")
          node -e "
            const fs = require('fs');
            const appConfig = JSON.parse(fs.readFileSync('app.json', 'utf8'));
            appConfig.expo.version = '$VERSION';
            fs.writeFileSync('app.json', JSON.stringify(appConfig, null, 2));
          "
          
          echo "Updated Open Bible Stories to version: $VERSION"
        fi
        
    - name: 🏗 Setup Expo CLI
      run: npm install -g @expo/cli@latest
      
    - name: 🏗 Prebuild for Android
      run: |
        echo "Prebuilding Open Bible Stories for Android..."
        expo prebuild --platform android --clean
        
    - name: 🔑 Make Gradle wrapper executable
      run: chmod +x android/gradlew
      
    - name: 🔨 Build Android Release APK
      run: |
        echo "Building Open Bible Stories Android release..."
        npm run build:android:release
        
    - name: 📦 Prepare build artifacts
      run: |
        # Create artifacts directory
        mkdir -p artifacts
        
        # Get version info
        VERSION=$(node -p "require('./package.json').version")
        
        # If triggered by tag, use tag version, otherwise use package.json version
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          TAG_VERSION="${{ github.ref_name }}"
          # Remove 'v' prefix if present
          VERSION="${TAG_VERSION#v}"
          echo "Using tag version: $VERSION"
        fi
        
        # Copy the APK with version in filename
        cp android/app/build/outputs/apk/release/app-release.apk artifacts/obs-app-v${VERSION}.apk
        
        # Create build info
        cat > artifacts/build-info.json << EOF
        {
          "app": "Open Bible Stories",
          "version": "$VERSION",
          "buildDate": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "platform": "android",
          "buildType": "release",
          "commit": "${{ github.sha }}",
          "branch": "${{ github.ref_name }}",
          "tag": "${{ github.ref_type == 'tag' && github.ref_name || 'none' }}",
          "ministry": "unfoldingWord",
          "project": "Open Bible Stories"
        }
        EOF
        
        # Create release notes
        cat > artifacts/RELEASE-NOTES.md << EOF
        # Open Bible Stories v${VERSION} - Android Release
        
        ## 📱 Installation
        1. Download **obs-app-v${VERSION}.apk**
        2. Enable "Unknown Sources" in Android Settings → Security
        3. Install the APK file
        4. Launch **Open Bible Stories** from your app drawer
        
        ## ✨ Features
        - 📚 50 Bible stories with beautiful illustrations
        - 🌍 Multiple language support
        - 📱 Offline reading capability
        - 💾 SQLite database for local storage
        - 📊 Progress tracking and bookmarks
        - 🔍 Search functionality
        - ❤️ Favorites management
        - 🌙 Dark mode support
        
        ## 🌍 Perfect For Ministry
        - 🌏 **Missionaries**: Offline access in remote areas
        - ⛪ **Churches**: Share with congregation members
        - 📚 **Translation Teams**: Test new language versions
        - 👨‍👩‍👧‍👦 **Family Devotions**: Engaging stories for children
        - 📖 **Bible Study Groups**: Illustrated Bible stories
        
        ## 🔧 Build Information
        - **Version**: v${VERSION}
        - **Build Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        - **Platform**: Android
        - **Commit**: ${{ github.sha }}
        
        ## 📞 Support
        - **Issues**: [GitHub Issues](https://github.com/abelpz/my-expo-app/issues)
        - **Documentation**: [README](https://github.com/abelpz/my-expo-app#readme)
        
        ---
        **Built with ❤️ for global Bible translation and distribution by unfoldingWord**
        EOF
        
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "✅ Build artifacts prepared for version $VERSION"
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obs-android-release-v${{ env.VERSION }}-${{ github.run_number }}
        path: artifacts/
        retention-days: 90
        
    - name: 🚀 Create GitHub Release (for tags)
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/obs-app-v${{ env.VERSION }}.apk
          artifacts/build-info.json
          artifacts/RELEASE-NOTES.md
        body_path: artifacts/RELEASE-NOTES.md
        name: "Open Bible Stories v${{ env.VERSION }}"
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🚀 Create GitHub Release (manual with option)
      if: github.event.inputs.create_release == 'true' && github.ref_type != 'tag'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/obs-app-v${{ env.VERSION }}.apk
          artifacts/build-info.json
          artifacts/RELEASE-NOTES.md
        body_path: artifacts/RELEASE-NOTES.md
        name: "Open Bible Stories v${{ env.VERSION }}"
        tag_name: "v${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📋 Build Summary
      run: |
        APK_SIZE=$(du -h artifacts/obs-app-v${{ env.VERSION }}.apk | cut -f1)
        
        echo "## 🎉 Open Bible Stories v${{ env.VERSION }} Build Completed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Build Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **App Name**: Open Bible Stories" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: v${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Platform**: Android" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: Release" >> $GITHUB_STEP_SUMMARY
        echo "- **APK Size**: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
        echo "- **APK Name**: obs-app-v${{ env.VERSION }}.apk" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          echo "### 🎊 GitHub Release Created!" >> $GITHUB_STEP_SUMMARY
          echo "- **Release**: [Open Bible Stories v${{ env.VERSION }}](https://github.com/abelpz/my-expo-app/releases/tag/${{ github.ref_name }})" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Download**: Ready on the release page" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ github.event.inputs.create_release }}" == "true" ]]; then
          echo "### 🎊 GitHub Release Created!" >> $GITHUB_STEP_SUMMARY
          echo "- **Release**: [Open Bible Stories v${{ env.VERSION }}](https://github.com/abelpz/my-expo-app/releases/tag/v${{ env.VERSION }})" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Download**: Ready on the release page" >> $GITHUB_STEP_SUMMARY
        else
          echo "### 📥 Download from Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to the **Artifacts** section of this workflow run" >> $GITHUB_STEP_SUMMARY
          echo "2. Download **obs-android-release-v${{ env.VERSION }}-${{ github.run_number }}**" >> $GITHUB_STEP_SUMMARY
          echo "3. Extract to get **obs-app-v${{ env.VERSION }}.apk**" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Installation:" >> $GITHUB_STEP_SUMMARY
        echo "1. Transfer APK to Android device" >> $GITHUB_STEP_SUMMARY
        echo "2. Enable **Unknown Sources** in Android Settings" >> $GITHUB_STEP_SUMMARY
        echo "3. Install the APK file" >> $GITHUB_STEP_SUMMARY
        echo "4. Launch **Open Bible Stories** from app drawer" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🌍 Ministry Distribution:" >> $GITHUB_STEP_SUMMARY
        echo "Ready to share God's Word worldwide! 📖✨" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**unfoldingWord** - Providing unrestricted biblical content in every language" >> $GITHUB_STEP_SUMMARY 